{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"features/features/","text":"Features Cross Platform Speed and Performance Productivity Full Development Story","title":""},{"location":"features/features/#features","text":"","title":"Features"},{"location":"features/features/#cross-platform","text":"","title":"Cross Platform"},{"location":"features/features/#speed-and-performance","text":"","title":"Speed and Performance"},{"location":"features/features/#productivity","text":"","title":"Productivity"},{"location":"features/features/#full-development-story","text":"","title":"Full Development Story"},{"location":"functional-modules/pdf-maker/","text":"Overview Environment Variables Run as standalone Container Use as submodule in existing module Issue Tracking Release Notes Contributors","title":"Pdf Maker"},{"location":"functional-modules/pdf-maker/#overview","text":"","title":"Overview"},{"location":"functional-modules/pdf-maker/#environment-variables","text":"","title":"Environment Variables"},{"location":"functional-modules/pdf-maker/#run-as-standalone-container","text":"","title":"Run as standalone Container"},{"location":"functional-modules/pdf-maker/#use-as-submodule-in-existing-module","text":"","title":"Use as submodule in existing module"},{"location":"functional-modules/pdf-maker/#issue-tracking","text":"","title":"Issue Tracking"},{"location":"functional-modules/pdf-maker/#release-notes","text":"","title":"Release Notes"},{"location":"functional-modules/pdf-maker/#contributors","text":"","title":"Contributors"},{"location":"functional-modules/reference-value/","text":"Overview Environment Variables Run as standalone Container Use as submodule in existing module issue Tracking Release Notes Contributors","title":"reference-value"},{"location":"functional-modules/reference-value/#overview","text":"","title":"Overview"},{"location":"functional-modules/reference-value/#environment-variables","text":"","title":"Environment Variables"},{"location":"functional-modules/reference-value/#run-as-standalone-container","text":"","title":"Run as standalone Container"},{"location":"functional-modules/reference-value/#use-as-submodule-in-existing-module","text":"","title":"Use as submodule in existing module"},{"location":"functional-modules/reference-value/#issue-tracking","text":"","title":"issue Tracking"},{"location":"functional-modules/reference-value/#release-notes","text":"","title":"Release Notes"},{"location":"functional-modules/reference-value/#contributors","text":"","title":"Contributors"},{"location":"functional-modules/sequence-number/","text":"Overview Environment Variables Run as standalone Container Use as submodule in existing module issue Tracking Release Notes Contributors","title":"sequence-number"},{"location":"functional-modules/sequence-number/#overview","text":"","title":"Overview"},{"location":"functional-modules/sequence-number/#environment-variables","text":"","title":"Environment Variables"},{"location":"functional-modules/sequence-number/#run-as-standalone-container","text":"","title":"Run as standalone Container"},{"location":"functional-modules/sequence-number/#use-as-submodule-in-existing-module","text":"","title":"Use as submodule in existing module"},{"location":"functional-modules/sequence-number/#issue-tracking","text":"","title":"issue Tracking"},{"location":"functional-modules/sequence-number/#release-notes","text":"","title":"Release Notes"},{"location":"functional-modules/sequence-number/#contributors","text":"","title":"Contributors"},{"location":"home/api-testing-and-code-coverage/","text":"","title":"API Testing and code coverage"},{"location":"home/architecture/","text":"High level architecture overview Reference Architecture","title":"Architecture"},{"location":"home/architecture/#high-level-architecture-overview","text":"","title":"High level architecture overview"},{"location":"home/architecture/#reference-architecture","text":"","title":"Reference Architecture"},{"location":"home/cli-commands/","text":"List All Commands Cheat Sheet mio new S.No Template Name Command Description 1 api mio new api [app-name] Create mission.api 2 core mio new core [app-name] Create mission.core 3 scheduler mio new scheduler [app-name] Create mission.scheduler 4 mongodb mio new mongodb [app-name] Create mission.mongodb 5 tsc mio new tsc [app-name] Create typescript quick start project 6 client mio new client [app-name] Create Angular seed project (inprogress) mio init Initialize the mission project. It will generate mission.json file. mio add mio list mio generage mio link mio lint mio build mio serve mio docker mio version mio help","title":"CLI Commands"},{"location":"home/cli-commands/#list-all-commands","text":"","title":"List All Commands"},{"location":"home/cli-commands/#cheat-sheet","text":"mio new S.No Template Name Command Description 1 api mio new api [app-name] Create mission.api 2 core mio new core [app-name] Create mission.core 3 scheduler mio new scheduler [app-name] Create mission.scheduler 4 mongodb mio new mongodb [app-name] Create mission.mongodb 5 tsc mio new tsc [app-name] Create typescript quick start project 6 client mio new client [app-name] Create Angular seed project (inprogress) mio init Initialize the mission project. It will generate mission.json file. mio add mio list mio generage mio link mio lint mio build mio serve mio docker mio version mio help","title":"Cheat Sheet"},{"location":"home/comments-and-feedback/","text":"In the spirit of open source, we invite anyone to provide feedback and comments on any reference architecture. Although we review our papers internally, sometimes issues or typographical errors are encountered. Feedback allows us to not only improve the quality of the papers we produce, but allows the reader to provide their thoughts on potential improvements and topic expansion to the papers. Feedback on the papers can be provided by emailing mission.io@outlook.com . Please refer to the title within the email.","title":"Comments and Feedback"},{"location":"home/containaraization/","text":"Docker Build Prerequisite Create Helm Chart Publish Helm Chart mission's Helm Charts Repository 1 helm repo add mission https://mission-io.github.io/charts/ Search repository 1 helm search pdfmaker For more Helm Command click me","title":"Containaraization"},{"location":"home/containaraization/#docker-build","text":"","title":"Docker Build"},{"location":"home/containaraization/#prerequisite","text":"","title":"Prerequisite"},{"location":"home/containaraization/#create-helm-chart","text":"","title":"Create Helm Chart"},{"location":"home/containaraization/#publish-helm-chart","text":"","title":"Publish Helm Chart"},{"location":"home/containaraization/#missions-helm-charts-repository","text":"1 helm repo add mission https://mission-io.github.io/charts/","title":"mission's Helm Charts Repository"},{"location":"home/containaraization/#search-repository","text":"1 helm search pdfmaker","title":"Search repository"},{"location":"home/containaraization/#for-more-helm-command","text":"click me","title":"For more Helm Command"},{"location":"home/contributing/","text":"Interested in contributing to the Material theme? Want to report a bug? Before you do, please read the following guidelines.","title":"Contributing"},{"location":"home/create-rest-api-for-rdbms-database/","text":"Project Structure Configuration DB Configuration Read Replication CORS Configuration Request Simple Query Object Attributes Includes Response Associations Filters Core Middlewares","title":"Create Rest API for RDMS database"},{"location":"home/create-rest-api-for-rdbms-database/#project-structure","text":"","title":"Project Structure"},{"location":"home/create-rest-api-for-rdbms-database/#configuration","text":"","title":"Configuration"},{"location":"home/create-rest-api-for-rdbms-database/#db-configuration","text":"","title":"DB Configuration"},{"location":"home/create-rest-api-for-rdbms-database/#read-replication","text":"","title":"Read Replication"},{"location":"home/create-rest-api-for-rdbms-database/#cors-configuration","text":"","title":"CORS Configuration"},{"location":"home/create-rest-api-for-rdbms-database/#request","text":"","title":"Request"},{"location":"home/create-rest-api-for-rdbms-database/#simple-query-object","text":"","title":"Simple Query Object"},{"location":"home/create-rest-api-for-rdbms-database/#attributes","text":"","title":"Attributes"},{"location":"home/create-rest-api-for-rdbms-database/#includes","text":"","title":"Includes"},{"location":"home/create-rest-api-for-rdbms-database/#response","text":"","title":"Response"},{"location":"home/create-rest-api-for-rdbms-database/#associations","text":"","title":"Associations"},{"location":"home/create-rest-api-for-rdbms-database/#filters","text":"","title":"Filters"},{"location":"home/create-rest-api-for-rdbms-database/#core-middlewares","text":"","title":"Core Middlewares"},{"location":"home/create-rest-api/","text":"Project Structure Create new API Project 1 mio new api api-name Example 1 mio new api DemoApi Decorators Routable 1 @Routable( route-path , verbe ) example 1 2 3 4 5 6 7 8 import { Routable } from mission.api ; @Routable ( /health , GET ) export class UserController { public static async getUsers ( req : Request , res : Response , next : NextFunction ) : Promise boolean { return { ... }; } } Controller Warning All methods should be static async . Both access specifiers ( public / private ) would be exposed as service. Example: 1 2 3 4 5 6 @Routable ( /user ) export class UserRegistrationController { public static async getUsers ( req : Request , res : Response , next : NextFunction ) : Promise any { ... } } Built-in Controllers Health Check Controller 1 2 3 4 5 6 7 8 9 @Routable ( /health , GET ) export class HealthService { public static async liveness ( req : Request , res : Response , next : NextFunction ) : Promise boolean { return true ; } public static async readyness ( req : Request , res : Response , next : NextFunction ) : Promise boolean { return true ; } } To Check the liveness of the appliation 1 http://localhost:3000/health/liveness To Check the readyness of the application 1 http://localhost:3000/health/readyness Note Readyness api need to be override to check the readyness of the other resources like Sql / NoSql database, redis cache, etc. Facade Controller Environment Variables Configuration Web Server Configuration 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 interface WebServerConfig { apiPort : number ; isHttpsEnabled : boolean ; httpsCertificatepath : string ; httpsKeypath : string ; corsOptions : CorsOptions ; } interface CorsOptions { origin? : boolean | string | RegExp | ( string | RegExp )[] | CustomOrigin ; methods? : string | string []; allowedHeaders? : string | string []; exposedHeaders? : string | string []; credentials? : boolean ; maxAge? : number ; preflightContinue? : boolean ; optionsSuccessStatus? : number ; } Example: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 import { config , DotenvResult } from dotenv ; import { StaticFileConfig , WebServerConfig } from mission.api ; const env : DotenvResult = config (); if ( env . error ) { throw env . error ; } export const WebConfig : WebServerConfig = { apiPort : Number ( process . env . WEB_PORT ), corsOptions : { allowedHeaders : ( process . env . CORS_ALLOWED_HEADERS || ). split ( , ), credentials : Boolean ( process . env . CORS_CREDENTIALS ), exposedHeaders : ( process . env . CORS_EXPOSED_HEADERS || ). split ( , ), maxAge : Number ( process . env . CORS_MAX_AGE ), methods : ( process . env . CORS_METHODS || ). split ( , ), origin : process.env.CORS_ORIGIN , }, httpsCertificatepath : process.env.WEB_SSL_CERTIFICATE_PATH || , httpsKeypath : process.env.WEB_SSL_KEY_PATH || , isHttpsEnabled : !! process . env . WEB_SSL_CERTIFICATE_PATH , }; export const FileConfig : StaticFileConfig = { dotfiles : ignore , etag : false , extensions : [ htm , html ], index : [ index.html , index.htm ], maxAge : process.env.STATIC_FILE_MAX_AGE || 1d , redirect : false , setHeaders : ( res : any , path : string , stat : string ) = { res . set ( x-timestamp , Date . now (). toString ()); }, }; Finally can create a WebServer instance with this config as follows. 1 2 3 4 5 6 7 8 9 10 11 12 import { ApplicationRoutes , GetRouter , Router , WebServer } from mission.api ; import { WebConfig } from ./config ; const server = new WebServer ( WebConfig , console ); import ./controller ; const route : Router = GetRouter (); route . use ( ApplicationRoutes ); server . init (); server . addApiRouting ( / , route ); server . start (); Logger Configuration Interface 1 2 3 4 5 6 interface LoggerInstance { log : Function ; info : Function ; warn : Function ; error : Function ; } Morgan Logger configuration: Set the following evironment variable. 1 process.env.MORGAN = dev Accepted Values are: 1. combined 2. common 3. dev (default) 4. short 5. tiny More Reference API Middlewares Util Wrap 1 Wrap (( req : Request , res : Response , next : NextFunction ) = {}); ErrorWrap","title":"Create REST API"},{"location":"home/create-rest-api/#project-structure","text":"","title":"Project Structure"},{"location":"home/create-rest-api/#create-new-api-project","text":"1 mio new api api-name Example 1 mio new api DemoApi","title":"Create new API Project"},{"location":"home/create-rest-api/#decorators","text":"","title":"Decorators"},{"location":"home/create-rest-api/#routable","text":"1 @Routable( route-path , verbe ) example 1 2 3 4 5 6 7 8 import { Routable } from mission.api ; @Routable ( /health , GET ) export class UserController { public static async getUsers ( req : Request , res : Response , next : NextFunction ) : Promise boolean { return { ... }; } }","title":"Routable"},{"location":"home/create-rest-api/#controller","text":"Warning All methods should be static async . Both access specifiers ( public / private ) would be exposed as service. Example: 1 2 3 4 5 6 @Routable ( /user ) export class UserRegistrationController { public static async getUsers ( req : Request , res : Response , next : NextFunction ) : Promise any { ... } }","title":"Controller"},{"location":"home/create-rest-api/#built-in-controllers","text":"","title":"Built-in Controllers"},{"location":"home/create-rest-api/#health-check-controller","text":"1 2 3 4 5 6 7 8 9 @Routable ( /health , GET ) export class HealthService { public static async liveness ( req : Request , res : Response , next : NextFunction ) : Promise boolean { return true ; } public static async readyness ( req : Request , res : Response , next : NextFunction ) : Promise boolean { return true ; } } To Check the liveness of the appliation 1 http://localhost:3000/health/liveness To Check the readyness of the application 1 http://localhost:3000/health/readyness Note Readyness api need to be override to check the readyness of the other resources like Sql / NoSql database, redis cache, etc.","title":"Health Check Controller"},{"location":"home/create-rest-api/#facade-controller","text":"","title":"Facade Controller"},{"location":"home/create-rest-api/#environment-variables","text":"","title":"Environment Variables"},{"location":"home/create-rest-api/#configuration","text":"","title":"Configuration"},{"location":"home/create-rest-api/#web-server-configuration","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 interface WebServerConfig { apiPort : number ; isHttpsEnabled : boolean ; httpsCertificatepath : string ; httpsKeypath : string ; corsOptions : CorsOptions ; } interface CorsOptions { origin? : boolean | string | RegExp | ( string | RegExp )[] | CustomOrigin ; methods? : string | string []; allowedHeaders? : string | string []; exposedHeaders? : string | string []; credentials? : boolean ; maxAge? : number ; preflightContinue? : boolean ; optionsSuccessStatus? : number ; } Example: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 import { config , DotenvResult } from dotenv ; import { StaticFileConfig , WebServerConfig } from mission.api ; const env : DotenvResult = config (); if ( env . error ) { throw env . error ; } export const WebConfig : WebServerConfig = { apiPort : Number ( process . env . WEB_PORT ), corsOptions : { allowedHeaders : ( process . env . CORS_ALLOWED_HEADERS || ). split ( , ), credentials : Boolean ( process . env . CORS_CREDENTIALS ), exposedHeaders : ( process . env . CORS_EXPOSED_HEADERS || ). split ( , ), maxAge : Number ( process . env . CORS_MAX_AGE ), methods : ( process . env . CORS_METHODS || ). split ( , ), origin : process.env.CORS_ORIGIN , }, httpsCertificatepath : process.env.WEB_SSL_CERTIFICATE_PATH || , httpsKeypath : process.env.WEB_SSL_KEY_PATH || , isHttpsEnabled : !! process . env . WEB_SSL_CERTIFICATE_PATH , }; export const FileConfig : StaticFileConfig = { dotfiles : ignore , etag : false , extensions : [ htm , html ], index : [ index.html , index.htm ], maxAge : process.env.STATIC_FILE_MAX_AGE || 1d , redirect : false , setHeaders : ( res : any , path : string , stat : string ) = { res . set ( x-timestamp , Date . now (). toString ()); }, }; Finally can create a WebServer instance with this config as follows. 1 2 3 4 5 6 7 8 9 10 11 12 import { ApplicationRoutes , GetRouter , Router , WebServer } from mission.api ; import { WebConfig } from ./config ; const server = new WebServer ( WebConfig , console ); import ./controller ; const route : Router = GetRouter (); route . use ( ApplicationRoutes ); server . init (); server . addApiRouting ( / , route ); server . start ();","title":"Web Server Configuration"},{"location":"home/create-rest-api/#logger-configuration-interface","text":"1 2 3 4 5 6 interface LoggerInstance { log : Function ; info : Function ; warn : Function ; error : Function ; } Morgan Logger configuration: Set the following evironment variable. 1 process.env.MORGAN = dev Accepted Values are: 1. combined 2. common 3. dev (default) 4. short 5. tiny More Reference","title":"Logger Configuration Interface"},{"location":"home/create-rest-api/#api-middlewares","text":"","title":"API Middlewares"},{"location":"home/create-rest-api/#util","text":"","title":"Util"},{"location":"home/create-rest-api/#wrap","text":"1 Wrap (( req : Request , res : Response , next : NextFunction ) = {});","title":"Wrap"},{"location":"home/create-rest-api/#errorwrap","text":"","title":"ErrorWrap"},{"location":"home/get-started/","text":"Prerequisites Install the Nodejs Install the git install the VSCode Install mysql or posgresql database Install the following npm modules globally typescript tslint rimraf 1 npm i typescript tslint rimraf mission.cli -g Verify the installatioin 1 2 3 4 5 tsc -v #shows typescript version number tslint -v #shows typescript lint version number node -v #shows nodejs version number git version #shows git version number mio version # shows mission command line interface version nubmer Software stack Sequelize Typescript Express js Redis MySQL MongoDb * puppeteer * bull * * These modules not required for all projects. Architecture Overview Recomended Tools VS Code Visual Studio Code is a lightweight but powerful source code editor which runs on your desktop and is available for Windows, macOS and Linux. It comes with built-in support for JavaScript, TypeScript and Node.js and has a rich ecosystem of extensions for other languages (such as C++, C#, Java, Python, PHP, Go) and runtimes (such as .NET and Unity) Recomended VS Code Plugins DotENV Docker Open API TS Lint Typescript Import Sorter MySQL Optional VS Code Plugins Handlebars Fix JSON Node Js Node.js\u00ae is a JavaScript runtime built on Chrome's V8 JavaScript engine. Node Js Download Git Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency. Git Download MySql database MySql Download PosgreSql database PosgreSql Download npm modules Essential JavaScript development tools that help you go to market faster and build powerful applications using modern open source code. 1 npm install typescript tslint rimraf mission.cli -g Optional Tools Docker The fastest, easiest, and most secure way to deliver containerized applications from development to production.","title":"Get started"},{"location":"home/get-started/#prerequisites","text":"Install the Nodejs Install the git install the VSCode Install mysql or posgresql database Install the following npm modules globally typescript tslint rimraf 1 npm i typescript tslint rimraf mission.cli -g","title":"Prerequisites"},{"location":"home/get-started/#verify-the-installatioin","text":"1 2 3 4 5 tsc -v #shows typescript version number tslint -v #shows typescript lint version number node -v #shows nodejs version number git version #shows git version number mio version # shows mission command line interface version nubmer","title":"Verify the installatioin"},{"location":"home/get-started/#software-stack","text":"Sequelize Typescript Express js Redis MySQL MongoDb * puppeteer * bull * * These modules not required for all projects. Architecture Overview","title":"Software stack"},{"location":"home/get-started/#recomended-tools","text":"","title":"Recomended Tools"},{"location":"home/get-started/#vs-code","text":"Visual Studio Code is a lightweight but powerful source code editor which runs on your desktop and is available for Windows, macOS and Linux. It comes with built-in support for JavaScript, TypeScript and Node.js and has a rich ecosystem of extensions for other languages (such as C++, C#, Java, Python, PHP, Go) and runtimes (such as .NET and Unity)","title":"VS Code"},{"location":"home/get-started/#recomended-vs-code-plugins","text":"DotENV Docker Open API TS Lint Typescript Import Sorter MySQL","title":"Recomended VS Code Plugins"},{"location":"home/get-started/#optional-vs-code-plugins","text":"Handlebars Fix JSON","title":"Optional VS Code Plugins"},{"location":"home/get-started/#node-js","text":"Node.js\u00ae is a JavaScript runtime built on Chrome's V8 JavaScript engine. Node Js Download","title":"Node Js"},{"location":"home/get-started/#git","text":"Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency. Git Download","title":"Git"},{"location":"home/get-started/#mysql-database","text":"MySql Download","title":"MySql database"},{"location":"home/get-started/#posgresql-database","text":"PosgreSql Download","title":"PosgreSql database"},{"location":"home/get-started/#npm-modules","text":"Essential JavaScript development tools that help you go to market faster and build powerful applications using modern open source code. 1 npm install typescript tslint rimraf mission.cli -g","title":"npm modules"},{"location":"home/get-started/#optional-tools","text":"","title":"Optional Tools"},{"location":"home/get-started/#docker","text":"The fastest, easiest, and most secure way to deliver containerized applications from development to production.","title":"Docker"},{"location":"home/license/","text":"MIT License Copyright \u00a9 2016 - 2019 mission.io Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"home/microservice-with-mission-io/","text":"Circuite Breaker opossum Api Gateway Express Gateway Loadbalancing - Kubernetes Service / Ingress Controller Proxy/Routing istio Distributed Tracing zipkin/elk/efk Kubernetes Service as internal Loadbalancing Azure DevOps for Code Repository, CI/CD, Board, Issue tracking","title":"Microservice with mission I/O"},{"location":"home/microservice-with-mission-io/#circuite-breaker-opossum","text":"","title":"Circuite Breaker opossum"},{"location":"home/microservice-with-mission-io/#api-gateway-express-gateway","text":"","title":"Api Gateway Express Gateway"},{"location":"home/microservice-with-mission-io/#loadbalancing-kubernetes-service-ingress-controller","text":"","title":"Loadbalancing - Kubernetes Service / Ingress Controller"},{"location":"home/microservice-with-mission-io/#proxyrouting-istio","text":"","title":"Proxy/Routing istio"},{"location":"home/microservice-with-mission-io/#distributed-tracing-zipkinelkefk","text":"","title":"Distributed Tracing zipkin/elk/efk"},{"location":"home/microservice-with-mission-io/#kubernetes-service-as-internal-loadbalancing","text":"","title":"Kubernetes Service as internal Loadbalancing"},{"location":"home/microservice-with-mission-io/#azure-devops-for-code-repository-cicd-board-issue-tracking","text":"","title":"Azure DevOps for Code Repository, CI/CD, Board, Issue tracking"},{"location":"home/mongodb/","text":"Create Standalone MongoDb Project Add MongoDb in Existing Project","title":"MongoDB"},{"location":"home/mongodb/#create-standalone-mongodb-project","text":"","title":"Create Standalone MongoDb Project"},{"location":"home/mongodb/#add-mongodb-in-existing-project","text":"","title":"Add MongoDb in Existing Project"},{"location":"home/open-api-3.0/","text":"Generate Open Api Document Generate client Sdk Add Server Import into Postman","title":"Open API 3.0"},{"location":"home/open-api-3.0/#generate-open-api-document","text":"","title":"Generate Open Api Document"},{"location":"home/open-api-3.0/#generate-client-sdk","text":"","title":"Generate client Sdk"},{"location":"home/open-api-3.0/#add-server","text":"","title":"Add Server"},{"location":"home/open-api-3.0/#import-into-postman","text":"","title":"Import into Postman"},{"location":"home/overview/","text":"Introduction to the mission.io Docs mission.io is a platform and framework for building server side api in express js and TypeScript . mission.io is written in TypeScript . It implements core and optional functionality as a set of TypeScript libraries that you import into your apps. The basic building blocks of a mission.io are mission.api , mission.core .","title":"Overview"},{"location":"home/overview/#introduction-to-the-missionio-docs","text":"mission.io is a platform and framework for building server side api in express js and TypeScript . mission.io is written in TypeScript . It implements core and optional functionality as a set of TypeScript libraries that you import into your apps. The basic building blocks of a mission.io are mission.api , mission.core .","title":"Introduction to the mission.io Docs"},{"location":"home/scheduler/","text":"Create Standalone Scheduler Project Add Scheduler in Existing Project","title":"Scheduler"},{"location":"home/scheduler/#create-standalone-scheduler-project","text":"","title":"Create Standalone Scheduler Project"},{"location":"home/scheduler/#add-scheduler-in-existing-project","text":"","title":"Add Scheduler in Existing Project"},{"location":"home/setup/","text":"Setting up the Local Environment and Workspace Step 1: Install the mission.io CLI 1 npm install -g @mission . cli 1 npm install -g @mission . cli @next Step 2: Create a workspace and initial application Step 3: Run the application Step 4: Test the application","title":"Setup"},{"location":"home/setup/#setting-up-the-local-environment-and-workspace","text":"","title":"Setting up the Local Environment and Workspace"},{"location":"home/setup/#step-1-install-the-missionio-cli","text":"1 npm install -g @mission . cli 1 npm install -g @mission . cli @next","title":"Step 1: Install the mission.io CLI"},{"location":"home/setup/#step-2-create-a-workspace-and-initial-application","text":"","title":"Step 2: Create a workspace and initial application"},{"location":"home/setup/#step-3-run-the-application","text":"","title":"Step 3: Run the application"},{"location":"home/setup/#step-4-test-the-application","text":"","title":"Step 4: Test the application"},{"location":"release-notes/mission.api/","text":"","title":"mission api"},{"location":"release-notes/mission.cli/","text":"V1.1.0 V1.0.1 V1.0.0","title":"mission cli"},{"location":"release-notes/mission.cli/#v110","text":"","title":"V1.1.0"},{"location":"release-notes/mission.cli/#v101","text":"","title":"V1.0.1"},{"location":"release-notes/mission.cli/#v100","text":"","title":"V1.0.0"},{"location":"release-notes/mission.common/","text":"","title":"mission common"},{"location":"release-notes/mission.core/","text":"","title":"mission core"},{"location":"release-notes/mission.scheduler/","text":"","title":"mission scheduler"},{"location":"team/contributors/","text":"","title":"Contributors"},{"location":"team/core-team/","text":"Core Team Natarajan Ganapathi Saravanan K J","title":"Core"},{"location":"team/core-team/#core-team","text":"Natarajan Ganapathi Saravanan K J","title":"Core Team"}]}